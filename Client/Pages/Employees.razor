@page "/Workers"
@inject HttpClient Http;


        
<MudTable Items="@_employee" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Employees</MudText>
        <div style="margin-left:100px; ">
        <MudButton Variant="Variant.Filled" @onclick="@(ToggleDrawer)"  >Add new employee</MudButton>
        </div>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>LastName</MudTh>
        <MudTh>Username</MudTh>
    
    </HeaderContent>
    <RowTemplate>
        @foreach (var empo in _employee)
        {
            <MudTd DataLabel="Name">@empo.Name</MudTd>
            <MudTd DataLabel="LastName">@empo.LastName</MudTd>
            <MudTd DataLabel="Username">@empo.Username</MudTd>
        }

    </RowTemplate>
</MudTable>


<MudDrawer @bind-Open="@_open" Width="600px" Height="100%" Anchor="_anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style="background-color:#484848; color:white;">
    <div class=" container-fluid">
        <div>
            <EditForm Model="@_newEmployee" OnValidSubmit="@AddEmployee">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="align-items-center">
                    <div class="row ">
                        <MudTextField Class="input" T="string" Label="Name" Variant="Variant.Filled" @bind-Value="@_newEmployee.Name" />
                        <MudTextField Class="input" T="string" Label="LastName" Variant="Variant.Filled" @bind-Value="@_newEmployee.LastName" />
                        <MudTextField Class="input" T="string" Label="Username" Variant="Variant.Filled" @bind-Value="_newEmployee.Username" />
                        <MudTextField Class="input" T="string" Label="Password" Variant="Variant.Filled" @bind-Value="_newEmployee.Password" />
                    </div>
                </div>
                <div class="row pt-4">
                    <button type="submit" class="btn btn-success offset-8 col-2"> Add </button>
                </div>
            </EditForm>


        </div>
    </div>
</MudDrawer>

@code {
    private IEnumerable<Employee> _employee = new List<Employee>();
    private Employee? employee { get; set; }
    private CreateEmployee _newEmployee { get; set; } = new();
    bool _open = false;
    Anchor _anchor;

    void ToggleDrawer()
    {
        _open = !_open;
        _anchor = Anchor.End;
    }



    protected override async Task OnInitializedAsync()
    {
        await GetEmployee();
        StateHasChanged();
    }

    private async Task GetEmployee()
    {
        _employee = await Http.GetFromJsonAsync<IEnumerable<Employee>>("/Employees");
    }


    private async Task AddEmployee()
    {
        if (_newEmployee != null)
        {
            await Http.PostAsJsonAsync<CreateEmployee>("/Employees", _newEmployee);
            StateHasChanged();
        }
    }
}


